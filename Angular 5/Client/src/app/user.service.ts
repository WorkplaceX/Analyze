import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs/Observable';

@Injectable()
export class UserService {

  constructor(private http: HttpClient) { }

  getUserList(sortColumnName: string, sortIsDesc: boolean): Observable<Typicode.User[]> {
    /*

    http://jsonplaceholder.typicode.com/users uses Json-Server as backend (https://github.com/typicode/json-server).
    Json-Server supports server side paging, sorting and filtering.

    */
    let sortParam = '_sort=' + sortColumnName;
    let sortAscDesc = 'asc';
    if (sortIsDesc === true) {
      sortAscDesc = 'desc';
    }
    sortParam += '&_order=' + sortAscDesc;
    return this.http.get('http://jsonplaceholder.typicode.com/users' + '?' + sortParam) as Observable<Typicode.User[]>;
  }

  getUser(userId: number) {
    return this.http.get('http://jsonplaceholder.typicode.com/users/' + userId) as Observable<Typicode.User>;
  }
}

// Strongly typed http://jsonplaceholder.typicode.com/users generated by http://json2ts.com/
export declare module Typicode {
  export interface User {
    id: number;
    name: string;
    username: string;
    email: string;
    address: Address;
    phone: string;
    website: string;
    company: Company;
}

export interface Geo {
      lat: string;
      lng: string;
  }

  export interface Address {
      street: string;
      suite: string;
      city: string;
      zipcode: string;
      geo: Geo;
  }

  export interface Company {
      name: string;
      catchPhrase: string;
      bs: string;
  }
}
